language: cpp

sudo: enabled

compiler:
  - gcc

matrix:
  include:
    - name: CUDA 10
      env:
      - CUDA=10.1.105-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      dist: bionic

before_install:
# Get CUDA (based on https://github.com/jeremad/cuda-travis)
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}
  - PATH=${PATH}:${PWD}
# GLM: We can get this from the standard Ubuntu repository, any recent version will do
  - sudo apt-get install -y libglm-dev
# TRIMESH: Get dependencies from standard repos, and build project from git using makefile
  - sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libxi-dev
  - git clone https://github.com/Forceflow/trimesh2.git
  - cd trimesh2 && make && cd ..

script:
  - mkdir build
  - cd build
  - cmake ..
  - make
# Try to run the executable - cannot do any actual voxelizing, because Travis has no GPU
# This will revert to CPU voxelization
  - ./cuda_voxelizer -f ../test_models/bunny.OBJ